From c262bfdc2c11307b1f9b882904c25fb62bc570af Mon Sep 17 00:00:00 2001
From: Stanislav Ochotnicky <sochotnicky@redhat.com>
Date: Tue, 6 Dec 2011 16:21:03 +0100
Subject: [PATCH] BUG: look for endian.h.

---
 numpy/core/SConscript                      |    4 ++++
 numpy/core/include/numpy/_numpyconfig.h.in |    2 ++
 numpy/core/setup.py                        |    9 +++++++++
 3 files changed, 15 insertions(+), 0 deletions(-)

diff --git a/numpy/core/SConscript b/numpy/core/SConscript
index 08a9abb..3ad65d7 100644
--- a/numpy/core/SConscript
+++ b/numpy/core/SConscript
@@ -78,6 +78,10 @@ check that you have he platform SDK. You may also use unsupported cflags.
 Configuration error log says: \n\n%s""" % ''.join(errmsg)
     Exit(-1)
 
+st = config.CheckHeader("endian.h")
+if st:
+    numpyconfig_sym.append(('DEFINE_NPY_HAVE_ENDIAN_H', '#define NPY_HAVE_ENDIAN_H 1'))
+
 def check_type(type, include = None):
     st = config.CheckTypeSize(type, includes = include)
     type = type.replace(' ', '_')
diff --git a/numpy/core/include/numpy/_numpyconfig.h.in b/numpy/core/include/numpy/_numpyconfig.h.in
index fd6146b..2cd389d 100644
--- a/numpy/core/include/numpy/_numpyconfig.h.in
+++ b/numpy/core/include/numpy/_numpyconfig.h.in
@@ -40,6 +40,8 @@
 #define NPY_ABI_VERSION @NPY_ABI_VERSION@
 #define NPY_API_VERSION @NPY_API_VERSION@
 
+@DEFINE_NPY_HAVE_ENDIAN_H@
+
 /* Ugly, but we can't test this in a proper manner without requiring a C++
  * compiler at the configuration stage of numpy ? */
 #ifndef __STDC_FORMAT_MACROS
diff --git a/numpy/core/setup.py b/numpy/core/setup.py
index a26dcb7..2f57817 100644
--- a/numpy/core/setup.py
+++ b/numpy/core/setup.py
@@ -245,6 +245,15 @@ def check_types(config_cmd, ext, build_dir):
         raise SystemError(
                 "Cannot compiler 'Python.h'. Perhaps you need to "\
                 "install python-dev|python-devel.")
+    res = config_cmd.check_header("endian.h")
+    if res:
+        private_defines.append(('HAVE_ENDIAN_H', 1))
+        public_defines.append(('NPY_HAVE_ENDIAN_H', 1))
+
+    res = config_cmd.check_header("endian.h")
+    if res:
+        private_defines.append(('HAVE_ENDIAN_H', 1))
+        public_defines.append(('NPY_HAVE_ENDIAN_H', 1))
 
     # Check basic types sizes
     for type in ('short', 'int', 'long'):
-- 
1.7.7.3

